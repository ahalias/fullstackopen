{"ast":null,"code":"var _jsxFileName = \"/Users/ahalias/projects/open/library-frontend/src/components/NewBook.js\",\n  _s = $RefreshSig$();\nimport { useMutation } from '@apollo/client';\nimport { useState } from 'react';\nimport { ADD_BOOK } from '../mutations';\nimport { ALL_AUTHORS, ALL_BOOKS, ALL_GENRES } from '../queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewBook = props => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [published, setPublished] = useState('');\n  const [genre, setGenre] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [addBook] = useMutation(ADD_BOOK, {\n    update: (cache, response) => {\n      cache.updateQuery({\n        query: ALL_BOOKS\n      }, _ref => {\n        let {\n          allBooks\n        } = _ref;\n        return {\n          allBooks: allBooks.concat(response.data.addBook)\n        };\n      });\n      cache.updateQuery({\n        query: ALL_AUTHORS\n      }, _ref2 => {\n        let {\n          allAuthors\n        } = _ref2;\n        const newAuthor = response.data.addBook.author;\n        return [...allAuthors, newAuthor];\n      });\n      cache.updateQuery({\n        query: ALL_GENRES\n      }, _ref3 => {\n        let {\n          allGenres\n        } = _ref3;\n        const newGenre = response.data.addBook.genres;\n        const updatedGenres = [...new Set([...allGenres, newGenre])];\n        return {\n          allGenres: updatedGenres\n        };\n      });\n    }\n  });\n  if (!props.show) {\n    return null;\n  }\n  const submit = async event => {\n    event.preventDefault();\n    await addBook({\n      variables: {\n        title,\n        author,\n        published: parseInt(published),\n        genres\n      }\n    });\n    console.log('add book...');\n    setTitle('');\n    setPublished('');\n    setAuthor('');\n    setGenres([]);\n    setGenre('');\n    props.setPage('books');\n  };\n  const addGenre = () => {\n    setGenres(genres.concat(genre));\n    setGenre('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"title\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: _ref4 => {\n            let {\n              target\n            } = _ref4;\n            return setTitle(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"author\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: author,\n          onChange: _ref5 => {\n            let {\n              target\n            } = _ref5;\n            return setAuthor(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"published\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: published,\n          onChange: _ref6 => {\n            let {\n              target\n            } = _ref6;\n            return setPublished(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: genre,\n          onChange: _ref7 => {\n            let {\n              target\n            } = _ref7;\n            return setGenre(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addGenre,\n          type: \"button\",\n          children: \"add genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"genres: \", genres.join(' ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"create book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(NewBook, \"mmDJdQvo3qq7L2TB1X2cn/cw9w4=\", false, function () {\n  return [useMutation];\n});\n_c = NewBook;\nexport default NewBook;\nvar _c;\n$RefreshReg$(_c, \"NewBook\");","map":{"version":3,"names":["useMutation","useState","ADD_BOOK","ALL_AUTHORS","ALL_BOOKS","ALL_GENRES","NewBook","props","title","setTitle","author","setAuthor","published","setPublished","genre","setGenre","genres","setGenres","addBook","update","cache","response","updateQuery","query","allBooks","concat","data","allAuthors","newAuthor","allGenres","newGenre","updatedGenres","Set","show","submit","event","preventDefault","variables","parseInt","console","log","setPage","addGenre","target","value","join"],"sources":["/Users/ahalias/projects/open/library-frontend/src/components/NewBook.js"],"sourcesContent":["import { useMutation } from '@apollo/client'\nimport { useState } from 'react'\nimport { ADD_BOOK } from '../mutations'\nimport { ALL_AUTHORS, ALL_BOOKS, ALL_GENRES } from '../queries'\n\nconst NewBook = (props) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [published, setPublished] = useState('')\n  const [genre, setGenre] = useState('')\n  const [genres, setGenres] = useState([])\n\n  const [ addBook ] = useMutation(ADD_BOOK, {\n    update: (cache, response) => {\n      cache.updateQuery({ query: ALL_BOOKS }, ({ allBooks }) => {\n        return {\n          allBooks: allBooks.concat(response.data.addBook)\n\n        };\n      });\n      cache.updateQuery({ query: ALL_AUTHORS }, ({ allAuthors }) => {\n        const newAuthor = response.data.addBook.author;\n        return [...allAuthors, newAuthor];\n      });\n      cache.updateQuery({ query: ALL_GENRES }, ({ allGenres }) => {\n        const newGenre = response.data.addBook.genres;\n        const updatedGenres = [...new Set([...allGenres, newGenre])];\n        return { allGenres: updatedGenres };\n      });\n    },\n\n})\n\n\n\n  if (!props.show) {\n    return null\n  }\n\n  const submit = async (event) => {\n    event.preventDefault()\n\n    await addBook({  variables: { title, author, published: parseInt(published), genres } })\n\n\n    console.log('add book...')\n\n    setTitle('')\n    setPublished('')\n    setAuthor('')\n    setGenres([])\n    setGenre('')\n    props.setPage('books')\n  }\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre))\n    setGenre('')\n  }\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        <div>\n          title\n          <input\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author\n          <input\n            value={author}\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          published\n          <input\n            type=\"number\"\n            value={published}\n            onChange={({ target }) => setPublished(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            value={genre}\n            onChange={({ target }) => setGenre(target.value)}\n          />\n          <button onClick={addGenre} type=\"button\">\n            add genre\n          </button>\n        </div>\n        <div>genres: {genres.join(' ')}</div>\n        <button type=\"submit\">create book</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewBook"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}