{"ast":null,"code":"var _jsxFileName = \"/Users/ahalias/projects/open/library-frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  const token = localStorage.getItem('user-token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : null\n    }\n  };\n});\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000'\n});\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n});\nReactDOM.createRoot(document.getElementById('root')).render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 1\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","authLink","_","headers","token","localStorage","getItem","authorization","httpLink","uri","client","cache","link","concat","createRoot","document","getElementById","render"],"sources":["/Users/ahalias/projects/open/library-frontend/src/index.js"],"sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client'\nimport { setContext } from '@apollo/client/link/context'\n\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('user-token')\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : null,\n    }\n  }\n})\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000',\n})\n\n\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n})\n\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <ApolloProvider client={client}>\n<App />\n  </ApolloProvider>\n\n\n)"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,YAAY,EAAEC,aAAa,EAAEC,cAAc,EAAEC,cAAc,QAAQ,gBAAgB;AAC5F,SAASC,UAAU,QAAQ,6BAA6B;AAAA;AAGxD,MAAMC,QAAQ,GAAGD,UAAU,CAAC,CAACE,CAAC,WAAkB;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EACzC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAChD,OAAO;IACLH,OAAO,EAAE;MACP,GAAGA,OAAO;MACVI,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAC,GAAG;IAC7C;EACF,CAAC;AACH,CAAC,CAAC;AAEF,MAAMI,QAAQ,GAAGT,cAAc,CAAC;EAC9BU,GAAG,EAAE;AACP,CAAC,CAAC;AAIF,MAAMC,MAAM,GAAG,IAAId,YAAY,CAAC;EAC9Be,KAAK,EAAE,IAAId,aAAa,EAAE;EAC1Be,IAAI,EAAEX,QAAQ,CAACY,MAAM,CAACL,QAAQ;AAChC,CAAC,CAAC;AAGFd,QAAQ,CAACoB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAACC,MAAM,eACzD,QAAC,cAAc;EAAC,MAAM,EAAEP,MAAO;EAAA,uBACjC,QAAC,GAAG;IAAA;IAAA;IAAA;EAAA;AAAG;EAAA;EAAA;EAAA;AAAA,QACY,CAGlB"},"metadata":{},"sourceType":"module","externalDependencies":[]}