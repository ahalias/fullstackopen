{"ast":null,"code":"var _jsxFileName = \"/Users/ahalias/projects/open/library-frontend/src/components/Books.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { ALL_BOOKS } from \"../queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Books = props => {\n  _s();\n  const [genre, setGenre] = useState(null);\n  const result = useQuery(ALL_BOOKS, {\n    variables: {\n      genre\n    }\n  });\n  const [allGenres, setAllGenres] = useState({});\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    if (result.data && result.data.allBooks) {\n      const genres = result.data.allBooks.flatMap(book => book.genres);\n      setAllGenres([...new Set(genres)]);\n    }\n  }, [result.data]);\n  useEffect(() => {\n    if (result.data && result.data.allBooks) {\n      setBooks(result.data.allBooks);\n    }\n  }, [result.data]);\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n  if (!props.show) {\n    return null;\n  }\n  const fetchBooksByQuery = genretoShow => {\n    setGenre(genretoShow);\n    console.log(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"by \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"published\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), books.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.author.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.published\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, a.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), allGenres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: () => fetchBooksByQuery(genre),\n      children: genre\n    }, genre, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Books, \"UunysMZfbI5LFR2iV6GUu9iDAYw=\", false, function () {\n  return [useQuery];\n});\n_c = Books;\nexport default Books;\nvar _c;\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"names":["useQuery","useEffect","useState","ALL_BOOKS","Books","props","genre","setGenre","result","variables","allGenres","setAllGenres","books","setBooks","data","allBooks","genres","flatMap","book","Set","loading","show","fetchBooksByQuery","genretoShow","console","log","map","a","title","author","name","published"],"sources":["/Users/ahalias/projects/open/library-frontend/src/components/Books.js"],"sourcesContent":["import { useQuery } from \"@apollo/client\"\nimport { useEffect, useState } from \"react\"\nimport { ALL_BOOKS } from \"../queries\"\n\n\n\nconst Books = (props) => {\n\n\n  const [genre, setGenre] = useState(null)\n\n  const result = useQuery(ALL_BOOKS, {\n    variables: { genre },\n  })\n\n  const [allGenres, setAllGenres] = useState({});\n  const [books, setBooks] = useState([])\n\n\n\n  useEffect(() => {\n    if (result.data && result.data.allBooks) {\n      const genres = result.data.allBooks.flatMap(book => book.genres);\n      setAllGenres([...new Set(genres)]);      \n    }\n  }, [result.data]);\n\n  useEffect(() => {\n    if (result.data && result.data.allBooks) {\n      setBooks(result.data.allBooks)\n    }\n  }, [result.data])\n\n\n\n  if (result.loading) {\n    return (\n      <div>Loading...</div>\n    )\n  }\n\n\n  if (!props.show) {\n    return null\n  }\n\n\n  const fetchBooksByQuery = (genretoShow) => {\n    setGenre(genretoShow)\n    console.log(result)\n  }\n\n\n\n  return (\n    <div>\n      <h2>books</h2>\n<p>by <b>genre</b></p>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>author</th>\n            <th>published</th>\n          </tr>\n          {books.map((a) => (\n            <tr key={a.title}>\n              <td>{a.title}</td>\n              <td>{a.author.name}</td>\n              <td>{a.published}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {allGenres.map(genre => (\n        <button key={genre} type=\"submit\" onClick={() => fetchBooksByQuery(genre)}>\n  {genre}\n</button>\n      ))}\n      \n    </div>\n  )\n}\n\nexport default Books\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}