{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport anecdoteReducer from './reducers/anecdoteReducer';\nimport filterReducer from './reducers/filterReducer';\nimport notificationReducer from './reducers/notificationReducer';\nconst store = configureStore({\n  reducer: {\n    anecdotes: anecdoteReducer,\n    filter: filterReducer,\n    notification: notificationReducer\n  }\n});\nuseEffect(() => {\n  anecdoteService.getAll().then(response => store.dispatch(setAnecdotes(response)));\n});\nexport default store;","map":{"version":3,"names":["configureStore","anecdoteReducer","filterReducer","notificationReducer","store","reducer","anecdotes","filter","notification","useEffect","anecdoteService","getAll","then","response","dispatch","setAnecdotes"],"sources":["/Users/ahalias/projects/open/anecdotes-redux/redux-anecdotes/src/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\n\n\nimport anecdoteReducer from './reducers/anecdoteReducer'\nimport filterReducer from './reducers/filterReducer'\nimport notificationReducer from './reducers/notificationReducer'\n\n\n\n\nconst store = configureStore({reducer: {\n  anecdotes: anecdoteReducer,\n  filter: filterReducer,\n  notification: notificationReducer\n}})\n\nuseEffect(() => {\n    anecdoteService\n    .getAll()\n    .then(response => store.dispatch(setAnecdotes(response)))\n      })\n\n\nexport default store"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AAGjD,OAAOC,eAAe,MAAM,4BAA4B;AACxD,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,mBAAmB,MAAM,gCAAgC;AAKhE,MAAMC,KAAK,GAAGJ,cAAc,CAAC;EAACK,OAAO,EAAE;IACrCC,SAAS,EAAEL,eAAe;IAC1BM,MAAM,EAAEL,aAAa;IACrBM,YAAY,EAAEL;EAChB;AAAC,CAAC,CAAC;AAEHM,SAAS,CAAC,MAAM;EACZC,eAAe,CACdC,MAAM,EAAE,CACRC,IAAI,CAACC,QAAQ,IAAIT,KAAK,CAACU,QAAQ,CAACC,YAAY,CAACF,QAAQ,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC;AAGR,eAAeT,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}