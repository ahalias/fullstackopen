{"ast":null,"code":"var _jsxFileName = \"/Users/ahalias/projects/open/patientor/patientor-frontend/src/components/PatientPage/index.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport patientService from \"../../services/patients\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientToShow = () => {\n  _s();\n  var _useParams$id;\n  const id = ((_useParams$id = useParams().id) === null || _useParams$id === void 0 ? void 0 : _useParams$id.toString()) || null;\n  const [patient, setPatient] = useState(null);\n  useEffect(() => {\n    const fetchPatient = async () => {\n      const fetchedPatient = await patientService.getPatient(id);\n      setPatient(fetchedPatient);\n    };\n    fetchPatient();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: patient && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"patient.name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientToShow, \"8PwdzP7ldVU6TLWN+Nupdz5tBVc=\", false, function () {\n  return [useParams];\n});\n_c = PatientToShow;\nexport default PatientToShow;\nvar _c;\n$RefreshReg$(_c, \"PatientToShow\");","map":{"version":3,"names":["useParams","patientService","useEffect","useState","PatientToShow","id","toString","patient","setPatient","fetchPatient","fetchedPatient","getPatient"],"sources":["/Users/ahalias/projects/open/patientor/patientor-frontend/src/components/PatientPage/index.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { Patient } from \"../../types\";\nimport patientService from \"../../services/patients\";\nimport { useEffect, useState } from \"react\";\n\nconst PatientToShow = () => {\n  const id = useParams().id?.toString() || null;\n  const [patient, setPatient] = useState<Patient | null>(null);\n\n  useEffect(() => {\n    const fetchPatient = async () => {\n      const fetchedPatient = await patientService.getPatient(id);\n      setPatient(fetchedPatient);\n    };\n    fetchPatient();\n  }, [id]);\n\n  return (\n    <div>\n      {patient && \n      \n      <h2>patient.name</h2>\n      \n      }\n    </div>\n  );\n};\n\nexport default PatientToShow;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5C,MAAMC,aAAa,GAAG,MAAM;EAAA;EAAA;EAC1B,MAAMC,EAAE,GAAG,kBAAAL,SAAS,EAAE,CAACK,EAAE,kDAAd,cAAgBC,QAAQ,EAAE,KAAI,IAAI;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAiB,IAAI,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACd,MAAMO,YAAY,GAAG,YAAY;MAC/B,MAAMC,cAAc,GAAG,MAAMT,cAAc,CAACU,UAAU,CAACN,EAAE,CAAC;MAC1DG,UAAU,CAACE,cAAc,CAAC;IAC5B,CAAC;IACDD,YAAY,EAAE;EAChB,CAAC,EAAE,CAACJ,EAAE,CAAC,CAAC;EAER,oBACE;IAAA,UACGE,OAAO,iBAER;MAAA,UAAI;IAAY;MAAA;MAAA;MAAA;IAAA;EAAK;IAAA;IAAA;IAAA;EAAA,QAGjB;AAEV,CAAC;AAAC,GArBIH,aAAa;EAAA,QACNJ,SAAS;AAAA;AAAA,KADhBI,aAAa;AAuBnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}