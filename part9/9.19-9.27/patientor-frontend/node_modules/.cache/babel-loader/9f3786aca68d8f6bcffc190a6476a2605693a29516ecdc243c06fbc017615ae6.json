{"ast":null,"code":"var _jsxFileName = \"/Users/ahalias/projects/open/patientor/patientor-frontend/src/components/PatientPage/index.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport patientService from \"../../services/patients\";\nimport { useEffect, useState } from \"react\";\nimport { Male, Female, Transgender } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PatientToShow = () => {\n  _s();\n  var _useParams$id;\n  const id = ((_useParams$id = useParams().id) === null || _useParams$id === void 0 ? void 0 : _useParams$id.toString()) || null;\n  const [patient, setPatient] = useState(null);\n  const [diagnoses, setDiagnoses] = useState(null);\n  useEffect(() => {\n    const fetchPatient = async () => {\n      const fetchedPatient = await patientService.getPatient(id);\n      setPatient(fetchedPatient);\n      const fetchedDiagnoses = await patientService.getDiagnoses(id);\n      setDiagnoses(fetchedDiagnoses);\n    };\n    fetchPatient();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [patient && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [patient.name, \" \", patient.gender === \"male\" ? /*#__PURE__*/_jsxDEV(Male, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this) : patient.gender === \"female\" ? /*#__PURE__*/_jsxDEV(Female, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(Transgender, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ssn: \", patient.ssn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"occupation: \", patient.occupation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Entries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), patient && patient.entries && patient.entries.map(entry => {\n      var _entry$diagnosisCodes, _entry$diagnosisCodes2, _entry$diagnosisCodes3;\n      switch (entry.type) {\n        case \"Hospital\":\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [entry.date, \" \", entry.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 57\n            }, this), (_entry$diagnosisCodes = entry.diagnosisCodes) === null || _entry$diagnosisCodes === void 0 ? void 0 : _entry$diagnosisCodes.map(diagnose => {\n              var _diagnoses$find;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [diagnose, \" \", diagnoses === null || diagnoses === void 0 ? void 0 : (_diagnoses$find = diagnoses.find(it => it.code === diagnose)) === null || _diagnoses$find === void 0 ? void 0 : _diagnoses$find.name]\n              }, diagnose, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 111\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 20\n          }, this);\n        case \"OccupationalHealthcare\":\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [entry.date, \" \", entry.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 57\n            }, this), (_entry$diagnosisCodes2 = entry.diagnosisCodes) === null || _entry$diagnosisCodes2 === void 0 ? void 0 : _entry$diagnosisCodes2.map(diagnose => {\n              var _diagnoses$find2;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [diagnose, \" \", diagnoses === null || diagnoses === void 0 ? void 0 : (_diagnoses$find2 = diagnoses.find(it => it.code === diagnose)) === null || _diagnoses$find2 === void 0 ? void 0 : _diagnoses$find2.name]\n              }, diagnose, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 111\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 20\n          }, this);\n        case \"HealthCheck\":\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [entry.date, \" \", entry.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 57\n            }, this), (_entry$diagnosisCodes3 = entry.diagnosisCodes) === null || _entry$diagnosisCodes3 === void 0 ? void 0 : _entry$diagnosisCodes3.map(diagnose => {\n              var _diagnoses$find3;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [diagnose, \" \", diagnoses === null || diagnoses === void 0 ? void 0 : (_diagnoses$find3 = diagnoses.find(it => it.code === diagnose)) === null || _diagnoses$find3 === void 0 ? void 0 : _diagnoses$find3.name]\n              }, diagnose, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 111\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 20\n          }, this);\n        default:\n          return null;\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientToShow, \"Nucz9jjJEqQ0rUr2eUZ5F4xLYjc=\", false, function () {\n  return [useParams];\n});\n_c = PatientToShow;\nexport default PatientToShow;\nvar _c;\n$RefreshReg$(_c, \"PatientToShow\");","map":{"version":3,"names":["useParams","patientService","useEffect","useState","Male","Female","Transgender","PatientToShow","id","toString","patient","setPatient","diagnoses","setDiagnoses","fetchPatient","fetchedPatient","getPatient","fetchedDiagnoses","getDiagnoses","name","gender","ssn","occupation","entries","map","entry","type","date","description","diagnosisCodes","diagnose","find","it","code"],"sources":["/Users/ahalias/projects/open/patientor/patientor-frontend/src/components/PatientPage/index.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { Diagnosis, Entry, Patient } from \"../../types\";\nimport patientService from \"../../services/patients\";\nimport { useEffect, useState } from \"react\";\nimport { Male , Female, Transgender } from '@mui/icons-material';\n\nconst PatientToShow = () => {\n  const id = useParams().id?.toString() || null;\n  const [patient, setPatient] = useState<Patient | null>(null);\n  const [diagnoses, setDiagnoses] = useState<Diagnosis[] | null>(null)\n\n  useEffect(() => {\n    const fetchPatient = async () => {\n      const fetchedPatient = await patientService.getPatient(id);\n      setPatient(fetchedPatient);\n      const fetchedDiagnoses = await patientService.getDiagnoses(id)\n      setDiagnoses(fetchedDiagnoses)\n    };\n    fetchPatient();\n  }, [id]);\n\n  return (\n    <div>\n      {patient && \n      <>\n      <h2>{patient.name} { patient.gender === \"male\" \n      ? <Male />\n      : patient.gender === \"female\"\n      ? < Female />\n      : < Transgender />\n    }</h2>\n      <p>ssn: {patient.ssn}</p>\n      <p>occupation: {patient.occupation}</p>\n      </>\n      }\n      <h2>Entries</h2>\n      { patient && patient.entries && patient.entries.map(entry => {\n        switch (entry.type) {\n          case \"Hospital\":\n            return <div>{entry.date} {entry.description}<br />{entry.diagnosisCodes?.map(diagnose => { return <li key={diagnose}>{diagnose} {diagnoses?.find(it => it.code === diagnose)?.name}</li> })}</div>;\n            case \"OccupationalHealthcare\":\n            return <div>{entry.date} {entry.description}<br />{entry.diagnosisCodes?.map(diagnose => { return <li key={diagnose}>{diagnose} {diagnoses?.find(it => it.code === diagnose)?.name}</li> })}</div>;\n            case \"HealthCheck\":\n            return <div>{entry.date} {entry.description}<br />{entry.diagnosisCodes?.map(diagnose => { return <li key={diagnose}>{diagnose} {diagnoses?.find(it => it.code === diagnose)?.name}</li> })}</div>;\n          default:\n            return null;\n        }\n        \n    })}\n    </div>\n  );\n};\n\nexport default PatientToShow;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}