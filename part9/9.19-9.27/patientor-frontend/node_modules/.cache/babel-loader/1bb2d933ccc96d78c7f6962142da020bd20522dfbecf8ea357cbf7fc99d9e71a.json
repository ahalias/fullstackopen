{"ast":null,"code":"var _jsxFileName = \"/Users/ahalias/projects/open/patientor/patientor-frontend/src/components/PatientPage/index.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport patientService from \"../../services/patients\";\nimport { useEffect, useState } from \"react\";\nimport { Male, Female, Transgender } from '@mui/icons-material';\nimport PatientEntries from \"../PatientEntries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PatientToShow = () => {\n  _s();\n  var _useParams$id;\n  const id = ((_useParams$id = useParams().id) === null || _useParams$id === void 0 ? void 0 : _useParams$id.toString()) || null;\n  const [patient, setPatient] = useState(null);\n  const [diagnoses, setDiagnoses] = useState(null);\n  useEffect(() => {\n    const fetchPatient = async () => {\n      const fetchedPatient = await patientService.getPatient(id);\n      setPatient(fetchedPatient);\n      const fetchedDiagnoses = await patientService.getDiagnoses(id);\n      setDiagnoses(fetchedDiagnoses);\n    };\n    fetchPatient();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [patient && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [patient.name, \" \", patient.gender === \"male\" ? /*#__PURE__*/_jsxDEV(Male, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this) : patient.gender === \"female\" ? /*#__PURE__*/_jsxDEV(Female, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(Transgender, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ssn: \", patient.ssn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"occupation: \", patient.occupation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Entries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), patient && patient.entries && /*#__PURE__*/_jsxDEV(PatientEntries, {\n      entries: patient.entries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientToShow, \"Nucz9jjJEqQ0rUr2eUZ5F4xLYjc=\", false, function () {\n  return [useParams];\n});\n_c = PatientToShow;\nexport default PatientToShow;\nvar _c;\n$RefreshReg$(_c, \"PatientToShow\");","map":{"version":3,"names":["useParams","patientService","useEffect","useState","Male","Female","Transgender","PatientEntries","PatientToShow","id","toString","patient","setPatient","diagnoses","setDiagnoses","fetchPatient","fetchedPatient","getPatient","fetchedDiagnoses","getDiagnoses","name","gender","ssn","occupation","entries"],"sources":["/Users/ahalias/projects/open/patientor/patientor-frontend/src/components/PatientPage/index.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { Diagnosis, Entry, Patient } from \"../../types\";\nimport patientService from \"../../services/patients\";\nimport { useEffect, useState } from \"react\";\nimport { Male , Female, Transgender } from '@mui/icons-material';\nimport PatientEntries from \"../PatientEntries\";\n\nconst PatientToShow = () => {\n  const id = useParams().id?.toString() || null;\n  const [patient, setPatient] = useState<Patient | null>(null);\n  const [diagnoses, setDiagnoses] = useState<Diagnosis[] | null>(null)\n\n  useEffect(() => {\n    const fetchPatient = async () => {\n      const fetchedPatient = await patientService.getPatient(id);\n      setPatient(fetchedPatient);\n      const fetchedDiagnoses = await patientService.getDiagnoses(id)\n      setDiagnoses(fetchedDiagnoses)\n    };\n    fetchPatient();\n  }, [id]);\n\n  return (\n    <div>\n      {patient && \n      <>\n      <h2>{patient.name} { patient.gender === \"male\" \n      ? <Male />\n      : patient.gender === \"female\"\n      ? < Female />\n      : < Transgender />\n    }</h2>\n      <p>ssn: {patient.ssn}</p>\n      <p>occupation: {patient.occupation}</p>\n      </>\n      }\n      <h2>Entries</h2>\n      { patient && patient.entries && <PatientEntries entries={patient.entries} />\n    \n    }\n    </div>\n  );\n};\n\nexport default PatientToShow;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,EAAGC,MAAM,EAAEC,WAAW,QAAQ,qBAAqB;AAChE,OAAOC,cAAc,MAAM,mBAAmB;AAAC;AAAA;AAE/C,MAAMC,aAAa,GAAG,MAAM;EAAA;EAAA;EAC1B,MAAMC,EAAE,GAAG,kBAAAT,SAAS,EAAE,CAACS,EAAE,kDAAd,cAAgBC,QAAQ,EAAE,KAAI,IAAI;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAiB,IAAI,CAAC;EAC5D,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAqB,IAAI,CAAC;EAEpED,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,YAAY;MAC/B,MAAMC,cAAc,GAAG,MAAMf,cAAc,CAACgB,UAAU,CAACR,EAAE,CAAC;MAC1DG,UAAU,CAACI,cAAc,CAAC;MAC1B,MAAME,gBAAgB,GAAG,MAAMjB,cAAc,CAACkB,YAAY,CAACV,EAAE,CAAC;MAC9DK,YAAY,CAACI,gBAAgB,CAAC;IAChC,CAAC;IACDH,YAAY,EAAE;EAChB,CAAC,EAAE,CAACN,EAAE,CAAC,CAAC;EAER,oBACE;IAAA,WACGE,OAAO,iBACR;MAAA,wBACA;QAAA,WAAKA,OAAO,CAACS,IAAI,EAAC,GAAC,EAAET,OAAO,CAACU,MAAM,KAAK,MAAM,gBAC5C,QAAC,IAAI;UAAA;UAAA;UAAA;QAAA,QAAG,GACRV,OAAO,CAACU,MAAM,KAAK,QAAQ,gBAC3B,QAAE,MAAM;UAAA;UAAA;UAAA;QAAA,QAAG,gBACX,QAAE,WAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACd,eACJ;QAAA,WAAG,OAAK,EAACV,OAAO,CAACW,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eACzB;QAAA,WAAG,cAAY,EAACX,OAAO,CAACY,UAAU;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA,gBACpC,eAEH;MAAA,UAAI;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,EACdZ,OAAO,IAAIA,OAAO,CAACa,OAAO,iBAAI,QAAC,cAAc;MAAC,OAAO,EAAEb,OAAO,CAACa;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAGxE;AAEV,CAAC;AAAC,GAnCIhB,aAAa;EAAA,QACNR,SAAS;AAAA;AAAA,KADhBQ,aAAa;AAqCnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}