{"ast":null,"code":"var _jsxFileName = \"/Users/ahalias/projects/open/patientor/patientor-frontend/src/components/PatientEntries.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport patientService from \"../services/patients\";\nimport { useParams } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledDiv = styled.div`\n  border: blue;\n  font-size: 18px;\n`;\n_c = StyledDiv;\nconst HospitalEntryDetails = _ref => {\n  var _entry$diagnosisCodes;\n  let {\n    entry,\n    diagnoses\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(StyledDiv, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [entry.date, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), entry.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this), (_entry$diagnosisCodes = entry.diagnosisCodes) === null || _entry$diagnosisCodes === void 0 ? void 0 : _entry$diagnosisCodes.map(diagnose => {\n        var _diagnoses$find;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [diagnose, \" \", diagnoses === null || diagnoses === void 0 ? void 0 : (_diagnoses$find = diagnoses.find(it => it.code.toLowerCase() === diagnose.toLowerCase())) === null || _diagnoses$find === void 0 ? void 0 : _diagnoses$find.name]\n        }, diagnose, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 20\n        }, this);\n      }), entry.discharge && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Discharge date: \", entry.discharge.date, \". Criteria: \", entry.discharge.criteria, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true)]\n    }, entry.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c2 = HospitalEntryDetails;\nconst OccupationHealthCareDetails = _ref2 => {\n  var _entry$sickLeave, _entry$sickLeave2, _entry$diagnosisCodes2;\n  let {\n    entry,\n    diagnoses\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(StyledDiv, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [entry.date, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), \"Employer name: \", entry.employerName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), entry.sickLeave && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Sick leave from \", (_entry$sickLeave = entry.sickLeave) === null || _entry$sickLeave === void 0 ? void 0 : _entry$sickLeave.startDate, \" to \", (_entry$sickLeave2 = entry.sickLeave) === null || _entry$sickLeave2 === void 0 ? void 0 : _entry$sickLeave2.endDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), entry.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), (_entry$diagnosisCodes2 = entry.diagnosisCodes) === null || _entry$diagnosisCodes2 === void 0 ? void 0 : _entry$diagnosisCodes2.map(diagnose => {\n        var _diagnoses$find2;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [diagnose, \" \", diagnoses === null || diagnoses === void 0 ? void 0 : (_diagnoses$find2 = diagnoses.find(it => it.code.toLowerCase() === diagnose.toLowerCase())) === null || _diagnoses$find2 === void 0 ? void 0 : _diagnoses$find2.name]\n        }, diagnose, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 28\n        }, this);\n      })]\n    }, entry.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_c3 = OccupationHealthCareDetails;\nconst HealthCheckDetails = _ref3 => {\n  var _entry$diagnosisCodes3;\n  let {\n    entry,\n    diagnoses\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(StyledDiv, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [entry.date, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), \"health check rating: \", entry.healthCheckRating, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), entry.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), (_entry$diagnosisCodes3 = entry.diagnosisCodes) === null || _entry$diagnosisCodes3 === void 0 ? void 0 : _entry$diagnosisCodes3.map(diagnose => {\n        var _diagnoses$find3;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [diagnose, \" \", diagnoses === null || diagnoses === void 0 ? void 0 : (_diagnoses$find3 = diagnoses.find(it => it.code.toLowerCase() === diagnose.toLowerCase())) === null || _diagnoses$find3 === void 0 ? void 0 : _diagnoses$find3.name]\n        }, diagnose, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 28\n        }, this);\n      })]\n    }, entry.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_c4 = HealthCheckDetails;\nconst PatientEntries = _ref4 => {\n  _s();\n  var _useParams$id;\n  let {\n    entries\n  } = _ref4;\n  const id = ((_useParams$id = useParams().id) === null || _useParams$id === void 0 ? void 0 : _useParams$id.toString()) || null;\n  const [diagnoses, setDiagnoses] = useState(null);\n  useEffect(() => {\n    const fetchDiagnoses = async () => {\n      const fetchedDiagnoses = await patientService.getDiagnoses(id);\n      setDiagnoses(fetchedDiagnoses);\n    };\n    fetchDiagnoses();\n  }, [id]);\n  function assertNever(value) {\n    throw new Error(`Unhandled value: ${value}`);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: entries.map(entry => {\n      switch (entry.type) {\n        case \"Hospital\":\n          return /*#__PURE__*/_jsxDEV(HospitalEntryDetails, {\n            entry: entry,\n            diagnoses: diagnoses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 20\n          }, this);\n        case \"OccupationalHealthcare\":\n          return /*#__PURE__*/_jsxDEV(OccupationHealthCareDetails, {\n            entry: entry,\n            diagnoses: diagnoses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 24\n          }, this);\n        case \"HealthCheck\":\n          return /*#__PURE__*/_jsxDEV(HealthCheckDetails, {\n            entry: entry,\n            diagnoses: diagnoses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 24\n          }, this);\n        default:\n          return assertNever(entry);\n      }\n    })\n  }, void 0, false);\n};\n_s(PatientEntries, \"wcJKpi6GuT2LsJAne/TynslFzWo=\", false, function () {\n  return [useParams];\n});\n_c5 = PatientEntries;\nexport default PatientEntries;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"StyledDiv\");\n$RefreshReg$(_c2, \"HospitalEntryDetails\");\n$RefreshReg$(_c3, \"OccupationHealthCareDetails\");\n$RefreshReg$(_c4, \"HealthCheckDetails\");\n$RefreshReg$(_c5, \"PatientEntries\");","map":{"version":3,"names":["useEffect","useState","patientService","useParams","styled","StyledDiv","div","HospitalEntryDetails","entry","diagnoses","date","description","diagnosisCodes","map","diagnose","find","it","code","toLowerCase","name","discharge","criteria","id","OccupationHealthCareDetails","employerName","sickLeave","startDate","endDate","HealthCheckDetails","healthCheckRating","PatientEntries","entries","toString","setDiagnoses","fetchDiagnoses","fetchedDiagnoses","getDiagnoses","assertNever","value","Error","type"],"sources":["/Users/ahalias/projects/open/patientor/patientor-frontend/src/components/PatientEntries.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Diagnosis, Entry, HealthCheckEntry, HospitalEntry, OccupationalHealthcareEntry } from \"../types\";\nimport patientService from \"../services/patients\";\nimport { useParams } from \"react-router-dom\";\nimport styled from 'styled-components';\n\n\nconst StyledDiv = styled.div`\n  border: blue;\n  font-size: 18px;\n`;\n\nconst HospitalEntryDetails = ({entry, diagnoses} : {entry: HospitalEntry, diagnoses: Diagnosis[] | null }) => {\n    return (\n        <StyledDiv>\n         <div key={entry.id}>\n        {entry.date} \n        <br />\n        {entry.description}\n    <br />\n    {entry.diagnosisCodes?.map(diagnose => \n        { \n            return <li key={diagnose}>\n        {diagnose} {diagnoses?.find(it => it.code.toLowerCase() === diagnose.toLowerCase())?.name}\n      </li> \n    })}\n    {entry.discharge && \n    <>\n    Discharge date: {entry.discharge.date}. Criteria: {entry.discharge.criteria}\n    <br />\n    </>\n    }\n      </div>\n      </StyledDiv>\n    )\n}\n\n\nconst OccupationHealthCareDetails = ({entry, diagnoses} : {entry: OccupationalHealthcareEntry, diagnoses: Diagnosis[] | null }) => {\n    return (\n        <StyledDiv>\n        <div key={entry.id}>\n                    \n                {entry.date} \n                <br />\n                Employer name: {entry.employerName}\n                <br />\n                {entry.sickLeave && \n                <>\n                Sick leave from {entry.sickLeave?.startDate} to {entry.sickLeave?.endDate} \n                <br />\n                </>}\n                \n                \n                {entry.description}\n            <br />\n            {entry.diagnosisCodes?.map(diagnose => \n                { \n                    return <li key={diagnose}>\n                {diagnose} {diagnoses?.find(it => it.code.toLowerCase() === diagnose.toLowerCase())?.name}\n              </li> \n            })}\n              </div>\n              </StyledDiv>\n    )\n}\n\nconst HealthCheckDetails = ({entry, diagnoses} : {entry: HealthCheckEntry, diagnoses: Diagnosis[] | null })  => {\n    return (\n        <StyledDiv>\n        <div key={entry.id}>\n                {entry.date}  \n                <br />\n                health check rating: {entry.healthCheckRating}\n                <br />\n                {entry.description} \n            <br />\n            {entry.diagnosisCodes?.map(diagnose => \n                { \n                    return <li key={diagnose}>\n                {diagnose} {diagnoses?.find(it => it.code.toLowerCase() === diagnose.toLowerCase())?.name}\n              </li> \n            })}\n              </div>\n              </StyledDiv>\n    )\n}\n\nconst PatientEntries: React.FC<{ entries: Entry[] }> = ({ entries }: {entries: Entry[]} ) => {\n    const id = useParams().id?.toString() || null;\n\n    const [diagnoses, setDiagnoses] = useState<Diagnosis[] | null>(null)\n\n\n    useEffect(() => {\n        const fetchDiagnoses = async () => {\n            const fetchedDiagnoses = await patientService.getDiagnoses(id)\n            setDiagnoses(fetchedDiagnoses)\n        }\n        fetchDiagnoses()\n    }, [id])\n\n\n    function assertNever(value: never): never {\n        throw new Error(`Unhandled value: ${value}`);\n      }\n\nreturn (\n    <>\n    {entries.map(entry => {\n        switch (entry.type) {\n          case \"Hospital\":\n            return < HospitalEntryDetails entry={entry}  diagnoses={diagnoses}/>\n            \n            case \"OccupationalHealthcare\":\n                return < OccupationHealthCareDetails entry={entry}  diagnoses={diagnoses} />     \n            case \"HealthCheck\":\n                return < HealthCheckDetails entry={entry}  diagnoses={diagnoses} />\n                \n            default:\n            return assertNever(entry);\n                }\n        }\n\n    \n    )}\n    </>\n);\n};\n\nexport default PatientEntries;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}