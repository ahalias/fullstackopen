{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = 'http://localhost:3000/api/diaries';\nconst getDiaries = async () => {\n  const response = await axios.get(`${baseUrl}`);\n  return response.data;\n};\nconst postDiary = async diary => {\n  try {\n    const response = await axios.post(`${baseUrl}`, diary);\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      if (error instanceof Error) {\n        const errorMessage = ' Error: ' + error.response;\n        return errorMessage;\n      }\n    } else {\n      console.error(error);\n      if (error instanceof Error) {\n        const errorMessage = ' Error: ' + error.message;\n        return errorMessage;\n      }\n    }\n  }\n};\nexport default {\n  getDiaries,\n  postDiary\n};","map":{"version":3,"names":["axios","baseUrl","getDiaries","response","get","data","postDiary","diary","post","error","isAxiosError","Error","errorMessage","console","message"],"sources":["/Users/ahalias/projects/open/flight-diary/frontend/src/services/diaryService.tsx"],"sourcesContent":["import axios from \"axios\"\nimport { DiaryType, NewDiaryType } from \"../types\"\n\n\nconst baseUrl = 'http://localhost:3000/api/diaries'\n\n\nconst getDiaries = async () => {\n    const response = await axios.get<DiaryType[]>(`${baseUrl}`)\n    return response.data\n}\n\nconst postDiary = async (diary: NewDiaryType) => {\n    try {\n        const response = await axios.post<DiaryType[]>(`${baseUrl}`, diary)\n        return response.data\n    \n    } catch (error: unknown) {\n        if (axios.isAxiosError(error)) {\n            if (error instanceof Error) {\n                const errorMessage = ' Error: ' + error.response;\n              return errorMessage;\n              }\n        } else {\n          console.error(error);\n          if (error instanceof Error) {\n            const errorMessage: string = ' Error: ' + error.message;\n          return errorMessage;\n          }\n        }\n    }\n\n}\n\n\nexport default { getDiaries, postDiary }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAIzB,MAAMC,OAAO,GAAG,mCAAmC;AAGnD,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC3B,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAe,GAAEH,OAAQ,EAAC,CAAC;EAC3D,OAAOE,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAMC,SAAS,GAAG,MAAOC,KAAmB,IAAK;EAC7C,IAAI;IACA,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAe,GAAEP,OAAQ,EAAC,EAAEM,KAAK,CAAC;IACnE,OAAOJ,QAAQ,CAACE,IAAI;EAExB,CAAC,CAAC,OAAOI,KAAc,EAAE;IACrB,IAAIT,KAAK,CAACU,YAAY,CAACD,KAAK,CAAC,EAAE;MAC3B,IAAIA,KAAK,YAAYE,KAAK,EAAE;QACxB,MAAMC,YAAY,GAAG,UAAU,GAAGH,KAAK,CAACN,QAAQ;QAClD,OAAOS,YAAY;MACnB;IACN,CAAC,MAAM;MACLC,OAAO,CAACJ,KAAK,CAACA,KAAK,CAAC;MACpB,IAAIA,KAAK,YAAYE,KAAK,EAAE;QAC1B,MAAMC,YAAoB,GAAG,UAAU,GAAGH,KAAK,CAACK,OAAO;QACzD,OAAOF,YAAY;MACnB;IACF;EACJ;AAEJ,CAAC;AAGD,eAAe;EAAEV,UAAU;EAAEI;AAAU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}